{"remainingRequest":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_failmy/Desktop/封装控件0423/src/components/dynamicSearch/text/textarea.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_failmy/Desktop/封装控件0423/src/components/dynamicSearch/text/textarea.vue","mtime":1555476416244},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n\nexport default {\n  data() {\n    return {\n      val: \"\",\n      isDisabled: false,\n    };\n  },\n  watch: {\n    val(val) {\n      this.options.hasValChange && this.$emit('componentValueChange',this);\n    },\n  },\n  props: [\"options\"],\n  beforeMount() {\n    if (this.options.isFromEdit && this.options.editDisabled) {\n      this.isDisabled = true;\n    }\n    if (!this.options.isFromEdit && this.options.addDisabled) {\n      this.isDisabled = true;\n    }\n    this.options.hasMountBefore && this.$emit(\"componentMountBefore\", this);\n  },\n  mounted() {\n    this.$emit('componentMountAfter',this);\n  },\n  methods: {\n    setValue: function(val) {\n      this.val = val;\n    }\n  }\n};\n",{"version":3,"sources":["textarea.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"textarea.vue","sourceRoot":"src/components/dynamicSearch/text","sourcesContent":["<template>\n  <textarea class=\"form-control\" type=\"text\" v-model=\"val\" :name=\"options.key\" autocomplete=\"off\" :placeholder=\"options.title\" maxlength=\"500\" :disabled=\"isDisabled\"></textarea>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      val: \"\",\n      isDisabled: false,\n    };\n  },\n  watch: {\n    val(val) {\n      this.options.hasValChange && this.$emit('componentValueChange',this);\n    },\n  },\n  props: [\"options\"],\n  beforeMount() {\n    if (this.options.isFromEdit && this.options.editDisabled) {\n      this.isDisabled = true;\n    }\n    if (!this.options.isFromEdit && this.options.addDisabled) {\n      this.isDisabled = true;\n    }\n    this.options.hasMountBefore && this.$emit(\"componentMountBefore\", this);\n  },\n  mounted() {\n    this.$emit('componentMountAfter',this);\n  },\n  methods: {\n    setValue: function(val) {\n      this.val = val;\n    }\n  }\n};\n</script>\n\n<style scoped>\n</style>"]}]}