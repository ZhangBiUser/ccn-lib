{"remainingRequest":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_failmy/Desktop/封装控件0423/src/components/dynamicSearch/dynamic_Search.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/hq_failmy/Desktop/封装控件0423/src/components/dynamicSearch/dynamic_Search.vue","mtime":1554863981190},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件0423/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.box-body-resizer .search-bar input,\r\n.box-body-resizer .search-bar select {\r\n  width: 150px;\r\n}\r\n.bootstrap-select:not([class*=\"col-\"]):not([class*=\"form-control\"]):not(.input-group-btn) {\r\n  width: 150px;\r\n}\r\n.pull-right {\r\n  margin: 10px;\r\n}\r\ni {\r\n  vertical-align: middle;\r\n}\r\n",{"version":3,"sources":["dynamic_Search.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"dynamic_Search.vue","sourceRoot":"src/components/dynamicSearch","sourcesContent":["\r\n<template>\r\n  <div>\r\n    <div class=\"form-group last-group\">\r\n      <template v-for=\"item in dynamicControls\">\r\n        <div class=\"form-group\" v-if=\"item.type!='br'\" :key=\"item.key\">\r\n          <component v-bind:is=\"item.type\" ref=\"child\" v-bind:options=\"item\"></component>\r\n        </div>\r\n        <br v-if=\"item.type=='br'\" :key=\"item.key\">\r\n      </template>\r\n    </div>\r\n    <div style=\"position: absolute;right: 0px;bottom: 10px;\">\r\n      <div :id=\"item.key\" v-for=\"item in btnList\" :key=\"item.key\" class=\"form-group pull-right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"item.method(item)\">\r\n          <i :class=\"item.iconStr ? 'fa ' + item.iconStr : ''\"></i>\r\n          {{item.title}}\r\n        </button>\r\n      </div>\r\n\r\n      <div v-if=\"showFucs.export\" class=\"form-group pull-right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"export2Excel\">\r\n          <i class=\"fa fa-download\"></i>\r\n          导出\r\n        </button>\r\n      </div>\r\n\r\n      <div v-if=\"showFucs.search\" class=\"form-group pull-right\">\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"search\">\r\n          <i class=\"fa fa-search\"></i>\r\n          查询\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style>\r\n.box-body-resizer .search-bar input,\r\n.box-body-resizer .search-bar select {\r\n  width: 150px;\r\n}\r\n.bootstrap-select:not([class*=\"col-\"]):not([class*=\"form-control\"]):not(.input-group-btn) {\r\n  width: 150px;\r\n}\r\n.pull-right {\r\n  margin: 10px;\r\n}\r\ni {\r\n  vertical-align: middle;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport v_text from \"@c/dynamicSearch/text/text\";\r\nimport v_datetime from \"@c/dynamicSearch/datetime/datetime\";\r\nimport v_singleSelect from \"@c/dynamicSearch/select/singleSelect\";\r\nimport v_doubleSelect from \"@c/dynamicSearch/select/doubleSelect\";\r\nimport { export_json_to_excel } from \"@/excel/Export2Excel.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isEdit: false,\r\n      showFucs: {\r\n        search: true,\r\n        export: true\r\n      },\r\n      btnList: []\r\n    };\r\n  },\r\n  props: [\"dynamicControls\", \"exportOptions\", \"searchOptions\", \"seleFunc\"],\r\n  beforeMount() {},\r\n  mounted: function() {\r\n    if (!$.isEmptyObject(this.seleFunc)) {\r\n      for (var key in this.seleFunc) {\r\n        if (key in this.showFucs) {\r\n          this.showFucs[key] = this.seleFunc[key];\r\n        } else {\r\n          if (\"addFunList\" in this.seleFunc) {\r\n            let list = this.seleFunc[\"addFunList\"] || [];\r\n            this.btnList = list.reverse();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    search: function() {\r\n      var result = {};\r\n      this.$refs.child.forEach(item => {\r\n        if (item.options.type == \"v_doubleSelect\") {\r\n          for (var key in item.val) {\r\n            result[key] = item.val[key];\r\n          }\r\n        } else {\r\n          result[item.options.key] = item.val;\r\n        }\r\n      });\r\n      if (this.searchOptions.requiredCondition) {\r\n        var valid = false;\r\n        for (const key in result) {\r\n          if (result[key] != undefined && result[key].trim()) {\r\n            valid = true;\r\n          }\r\n        }\r\n        if (!valid) {\r\n          layer.open({\r\n            type: 0,\r\n            title: \"提示\",\r\n            content: \"请输入查询条件！\"\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      this.$emit(\"callback\", result);\r\n    },\r\n    export2Excel() {\r\n      var _ = this;\r\n      var result = {};\r\n      this.$refs.child.forEach(item => {\r\n        if (item.options.type == \"v_doubleSelect\") {\r\n          for (var key in item.val) {\r\n            result[key] = item.val[key];\r\n          }\r\n        } else {\r\n          result[item.options.key] = item.val;\r\n        }\r\n      });\r\n      _.exportOptions.url(result).then(res => {\r\n        if (res.success) {\r\n          require.ensure([], () => {\r\n            var table = $(\"#\" + _.exportOptions.id);\r\n            //debugger;\r\n            var dataList = res.result.items;\r\n            var AllColumns = table.bootstrapTable(\"getOptions\").columns[0];\r\n            const tHeader = [];\r\n            const Headers = [];\r\n            AllColumns.forEach(item => {\r\n              tHeader.push(item.title);\r\n              Headers.push(item.field);\r\n            });\r\n            const filterVal = tHeader;\r\n            const list = [];\r\n            const data = this.formatJson(Headers, dataList);\r\n            export_json_to_excel(tHeader, data, _.exportOptions.name);\r\n          });\r\n        }\r\n      });\r\n    },\r\n    // 隐藏编辑表格数据模态框\r\n    edit: function() {\r\n      this.isEdit = false;\r\n      layer.close(this.layerId);\r\n    },\r\n    formatJson(filterVal, jsonData) {\r\n      return jsonData.map(v => filterVal.map(j => v[j]));\r\n    }\r\n  },\r\n  components: {\r\n    v_text,\r\n    v_datetime,\r\n    v_singleSelect,\r\n    v_doubleSelect\r\n  }\r\n};\r\n</script>\r\n"]}]}