{"remainingRequest":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_failmy/Desktop/文件上传管理，出参全小写/src/components/edit_table.vue?vue&type=style&index=0&scope=true&lang=css&","dependencies":[{"path":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/src/components/edit_table.vue","mtime":1555224203986},{"path":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理，出参全小写/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.leftmove .form-group.has-error .help-block {\n  margin-left: 0px !important;\n}\n.edit {\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n.v_mark {\n  line-height: 40px;\n  min-width: 150px;\n  text-align: right;\n  padding-right: 20px;\n}\n.v_mark span {\n  color: red;\n}\n.v_saveView {\n  position: relative;\n  margin-top: 50px;\n  width: 100%;\n  height: 50px;\n  text-align: center;\n}\n.v_saveBtn {\n  left: 0;\n  right: 0;\n  width: 80px;\n  height: 40px;\n  margin: auto;\n}\n.bv-form .help-block {\n  margin-left: 150px !important;\n}\n.has-error .control-label {\n  color: black !important;\n}\n/* .leftmove .form-group {\n  margin-right: 30px;\n} */\n.has-success .leftmove .form-group.has-error .bootstrap-select .dropdown-toggle {\n  border-color: #ccc;\n}\n.leftmove .form-group.has-error .help-block {\n  display: none !important;\n}\n",{"version":3,"sources":["edit_table.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit_table.vue","sourceRoot":"src/components","sourcesContent":["\n<template>\n  <form class=\"edit form-inline\" ref=\"formBody\">\n    <template v-for=\"(item, index) in dynamicEdits.list\">\n      <div\n        class=\"form-group\"\n        :style=\"'width:' + (item.lineType == 'single' ? '100% ': '50%')+';margin-bottom: 10px;'\"\n        :key=\"rowItem.key+index\"\n        v-for=\"rowItem in item.rowList\"\n      >\n        <label class=\"v_mark control-label\">\n          <span>{{rowItem.isRequest ? '*' : ''}}</span>\n          {{rowItem.type == 'v_doubleSelect'?rowItem.list[0].title+':':rowItem.title + ':'}}\n        </label>\n        <component\n          :class=\"rowItem.type == 'v_doubleSelect' ? 'leftmove' : ''\"\n          v-bind:is=\"rowItem.type\"\n          ref=\"child\"\n          v-bind:options=\"rowItem\"\n          style=\"width: 50%;display: inline;\"\n          @loadCallBack=\"loadCallBack\"\n        ></component>\n      </div>\n    </template>\n\n    <div class=\"v_saveView\">\n      <button class=\"btn btn-primary v_saveBtn\" @click=\"saveRecord\">保存</button>\n    </div>\n  </form>\n</template>\n\n\n<style scope>\n.leftmove .form-group.has-error .help-block {\n  margin-left: 0px !important;\n}\n.edit {\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n.v_mark {\n  line-height: 40px;\n  min-width: 150px;\n  text-align: right;\n  padding-right: 20px;\n}\n.v_mark span {\n  color: red;\n}\n.v_saveView {\n  position: relative;\n  margin-top: 50px;\n  width: 100%;\n  height: 50px;\n  text-align: center;\n}\n.v_saveBtn {\n  left: 0;\n  right: 0;\n  width: 80px;\n  height: 40px;\n  margin: auto;\n}\n.bv-form .help-block {\n  margin-left: 150px !important;\n}\n.has-error .control-label {\n  color: black !important;\n}\n/* .leftmove .form-group {\n  margin-right: 30px;\n} */\n.has-success .leftmove .form-group.has-error .bootstrap-select .dropdown-toggle {\n  border-color: #ccc;\n}\n.leftmove .form-group.has-error .help-block {\n  display: none !important;\n}\n</style>\n\n<script>\nimport v_text from \"@c/dynamicSearch/text/text\";\nimport v_textarea from \"@c/dynamicSearch/text/textarea\";\nimport v_datetime from \"@c/dynamicSearch/datetime/datetime\";\nimport v_singleSelect from \"@c/dynamicSearch/select/singleSelect\";\nimport v_doubleSelect from \"@c/dynamicSearch/select/doubleSelect\";\nimport { export_json_to_excel } from \"@/excel/Export2Excel.js\";\n\nvar ComponentType = {\n  doubleSelect: 'v_doubleSelect',\n  singleSelect: 'v_singleSelect',\n  text: 'v_text',\n  dateSelect: 'v_datetime',\n  textarea: 'v_textarea'\n};\nexport default {\n  data() {\n    return {\n      componentNum: 0, //统计当前组件中(类型 != v_text)组件数量 （这两种类型组件都需要通过请求刷新选择数据）\n      loadNum: 0, //已经渲染完成的 （类型 != v_text）组件数量\n      validateArr: null //需要校验组件信息集\n    };\n  },\n  // seleTableObj 需要编辑信息内容\n  props: {\n    dynamicEdits: {\n      isRequest: true\n    },\n    seleTableObj: {\n      type: Object,\n      default: null,\n    }\n  },\n  // props: [\"dynamicEdits\", \"seleTableObj\"],\n  beforeMount() {\n    this.cacularSelectNum();\n  },\n  mounted() {\n    // 设置表格校验信息\n    this.initValidate(this.validateArr);\n    if(this.seleTableObj && !this.componentNum) {\n      this.init();\n    }\n  },\n  methods: {\n    // 计算选择框的数量 &  收集需要校验的控件数组\n    cacularSelectNum: function() {\n      let _ = this;\n      _.validateArr = [];\n      this.dynamicEdits.list.map(item => {\n        item.rowList.forEach(subItem => {\n          juidgeComponentType(subItem);\n          if (subItem.list) {\n            subItem.list.map(innerItem => {\n              _.validateArr.push({\n                key: innerItem.selectkey,\n                validators: innerItem.validators ? innerItem.validators : {}\n              });\n            });\n          } else {\n            _.validateArr.push({\n              key:\n                subItem.type == ComponentType.singleSelect\n                  ? subItem.selectkey\n                  : subItem.key,\n              validators: subItem.validators ? subItem.validators : {}\n            });\n          }\n        });\n      });\n\n      function juidgeComponentType(currentItem) {\n        currentItem.type != ComponentType.text && currentItem.type != ComponentType.textarea && _.componentNum++;\n      }\n    },\n    // 给组件赋初始值\n    init: function() {\n      let _ = this;\n      this.$refs.child.forEach(item => {\n        if (item.options.type == ComponentType.doubleSelect) {\n          for (var key in item.$refs.selectList) {\n            let subItem = item.$refs.selectList[key];\n            subItem.options.key &&\n              subItem.setValue(_.seleTableObj[subItem.options.selectkey]);\n          }\n        } else if (item.options.type == ComponentType.singleSelect) {\n          item.setValue(_.seleTableObj[item.options.selectkey]);\n        } else {\n          let currentValue = _.seleTableObj[item.options.key];\n          currentValue && item.setValue(currentValue);\n        }\n      });\n    },\n    // 子控件渲染完成回调   不包含v_text\n    loadCallBack: function() {\n      if ($.isEmptyObject(this.seleTableObj)) return;\n      this.loadNum++;\n      this.componentNum == this.loadNum && this.init();\n    },\n    // 点击保存按钮\n    saveRecord: function() {\n      let _ = this;\n      // 开启校验\n      $(this.$refs.formBody)\n        .data(\"bootstrapValidator\")\n        .validate();\n      var flag = $(this.$refs.formBody)\n        .data(\"bootstrapValidator\")\n        .isValid();\n      if (!flag) return;\n\n      // 收集param\n      var result = {};\n      if (!$.isEmptyObject(_.seleTableObj)) {\n        result = _.seleTableObj;\n      }\n      this.$refs.child.forEach(item => {\n        if (item.options.type == ComponentType.doubleSelect) {\n          for (var key in item.val) {\n            result[key] = item.val[key];\n          }\n        } else if (item.options.type == ComponentType.dateSelect) {\n          result[item.options.key] = item.$refs.datetime.value;\n        } else if(item.options.type == ComponentType.singleSelect){\n          // result[item.options.key] = item.val();\n          result[item.options.key] = item.getValue();\n        }else{\n          result[item.options.key] = item.val;\n        }\n      });\n      this.submitReq(result);\n    },\n    // 发送保存数据的请求\n    submitReq: function(result) {\n      // this.dynamicEdits.apiUrl\n      let _ = this;\n      if ('params' in this.dynamicEdits) {\n        $.extend(result,this.dynamicEdits.params);\n      }\n      // debugger;\n      this.dynamicEdits.apiUrl(result).then(res => {\n        // debugger;\n        if (res.success) {\n          // 关闭所有页面层\n          layer.closeAll(\"page\");\n          layer.msg(\"数据保存成功\");\n          _.$emit(\"editCallback\", _.seleTableObj ? \"edit\" : \"add\", result);\n        } else {\n          layer.alert(res.message);\n        }\n      });\n    },\n    // 设置表格校验信息\n    initValidate: function(validateArr) {\n      let fieldArr = {};\n      this.validateArr.map(item => {\n        fieldArr[item.key] = { validators: item.validators };\n      });\n      this.validator = $(this.$refs.formBody).bootstrapValidator({\n        fields: fieldArr\n      });\n    }\n  },\n  components: { v_text, v_datetime, v_singleSelect, v_doubleSelect, v_textarea }\n};\n</script>\n\n"]}]}