{"remainingRequest":"/Users/hq_failmy/Desktop/封装控件/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_failmy/Desktop/封装控件/src/views/NewModule/ShellGlobalCode/New.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_failmy/Desktop/封装控件/src/views/NewModule/ShellGlobalCode/New.vue","mtime":1555926603031},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport vBasePage from \"../../BasePage/BasePage\";\nimport NewApi from \"../webapi/New\";\nimport config from \"@/config/index\";\n\nvar TableUniqueId = \"appId\";\nvar TerminalType = {\n  \"1\": \"总控\",\n  \"2\": \"分控\",\n  \"3\": \"HubApp\",\n  \"4\": \"CCN\"\n};\nexport default {\n  data() {\n    return {\n      searchOptions: {\n        searchOptions: {\n          requiredCondition: false\n        },\n        seleFunc: {\n          export: false,\n          search: true\n        },\n        // exportUrl: NewApi.GetAppInfoList,\n        search_controls: [\n          {\n            type: \"v_singleSelect\",\n            title: \"部署点\",\n            key: \"OrganiztionId\",\n            apiUrl: NewApi.GetOrganiztionList,\n            //params: { aaa: \"fff\" },\n            selectkey: \"organiztionId\",\n            selectvalue: \"organiztionSN\"\n          },\n          {\n            type: \"v_singleSelect\",\n            title: \"状态\",\n            key: \"isDelete\",\n            data: [\n              {\n                typeid: 0,\n                typename: \"启用\"\n              },\n              {\n                typeid: 1,\n                typename: \"禁用\"\n              }\n            ],\n            selectkey: \"typeid\",\n            selectvalue: \"typename\"\n          },\n          {\n            type: \"v_singleSelect\",\n            title: \"设备类型\",\n            key: \"TerminalType\",\n            data: [\n              {\n                id: \"1\",\n                value: \"总控\"\n              },\n              {\n                id: \"2\",\n                value: \"分控\"\n              },\n              {\n                id: \"3\",\n                value: \"HubApp\"\n              },\n              {\n                id: \"4\",\n                value: \"CCN\"\n              }\n            ],\n            selectkey: \"id\",\n            selectvalue: \"value\"\n          }\n        ]\n      },\n      buttonOptions: [\n        {\n          title: \"添加\",\n          key: \"add\",\n          enable: true,\n          iconStr: \"fa-plus\"\n        }\n      ],\n      editOptions: {\n        dynamicEdits: {\n          apiUrl: NewApi.SubmitAppInfo,\n          // params: {\"test\": \"111\"},\n          list: [\n            {\n              lineType: \"single\",\n              rowList: [\n                {\n                  type: \"v_singleSelect\",\n                  title: \"部署点\",\n                  key: \"organiztionId\",\n                  apiUrl: NewApi.GetOrganiztionList,\n                  hasValChange: true,\n                  //params: { aaa: \"fff\" },\n                  selectkey: \"organiztionId\",\n                  selectvalue: \"organiztionSN\"\n                },\n                {\n                  type: \"v_text\",\n                  title: \"AppSecret\",\n                  key: \"appSecret\",\n                  isRequest: true,\n                  editDisabled: true, //编辑环境下是否禁用\n                  addDisabled: true, //添加环境下是否禁用\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"AppSecret不能为空\"\n                    },\n                    regexp: {\n                      regexp: /^[A-Za-z0-9]+$/i,\n                      message: \"AppKey只能由字母字符和数字组成\"\n                    },\n                    stringLength: {\n                      max: 50,\n                      message: \"AppSecret最多只能输入50字\"\n                    }\n                  }\n                },\n                {\n                  type: \"v_upload\",\n                  key: \"uploadFile\",\n                  title: \"请选择上传图片\",\n                  isRequest: true,\n                  uploadNum: 3, // 文件数量,默认为1，多张图片以，号拼接字符串形式提交\n                  fileSizeLimit: 3, // 文件大小  以兆为单位\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"选择上传的文件不能为空\"\n                    }\n                  }\n                },\n                {\n                  type: \"v_upload\",\n                  key: \"uploadFile1\",\n                  title: \"请选择上传图片\",\n                  isRequest: true,\n                  uploadNum: 3, // 文件数量,默认为1，多张图片以，号拼接字符串形式提交\n                  fileSizeLimit: 3, // 文件大小  以兆为单位\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"选择上传的文件不能为空\"\n                    }\n                  }\n                },\n                {\n                  type: \"v_upload\",\n                  key: \"uploadFile2\",\n                  title: \"请选择上传图片\",\n                  isRequest: true,\n                  uploadNum: 3, // 文件数量,默认为1，多张图片以，号拼接字符串形式提交\n                  fileSizeLimit: 3, // 文件大小  以兆为单位\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"选择上传的文件不能为空\"\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      tableOption: {\n        tableId: \"proofreport\",\n        tableName: \"凭据统计报表\",\n        url: config.pgyerApiUrl + NewApi.GetAppInfoList.options.url,\n        method: NewApi.GetAppInfoList.options.method,\n        uniqueId: TableUniqueId,\n        actions: [\n          {\n            key: \"tableEdit\",\n            title: \"编辑\",\n            url: NewApi.GetAppInfoById,\n            method: NewApi.GetAppInfoById.method,\n            // params: {\n            //   aaa: \"fff\"\n            // },\n            tabIdx: 2\n          },\n          {\n            key: \"tablePause\",\n            statuKey: \"isDelete\",\n            // statuObj: {\n            //   'false': \"启用\",\n            //   'true': \"禁用\"\n            // },\n            title: \"启用/禁用\",\n            tabIdx: 0\n          },\n          {\n            key: \"tableDownload\",\n            url: NewApi.GetAppXMLDownLoadUrl,\n            method: NewApi.GetAppXMLDownLoadUrl.method,\n            title: \"下载\",\n            tabIdx: 1\n          }\n        ],\n        columns: [\n          {\n            field: \"organiztionSN\",\n            title: \"产品编码\",\n            align: \"center\"\n          },\n          {\n            field: \"appKey\",\n            title: \"产品名称\",\n            align: \"center\"\n          },\n          {\n            field: \"appSecret\",\n            title: \"生产批号\",\n            align: \"center\"\n          },\n          {\n            field: \"terminalType\",\n            title: \"上传日期\",\n            align: \"center\",\n            formatter: function(val, row) {\n              return TerminalType[row.terminalType];\n            }\n          }\n        ]\n      }\n    };\n  },\n  methods: {\n    rowClick: function(rowItem, element, baseObject) {\n      console.log(element);\n      let _ = this;\n      if (element.id == \"tablePause\") {\n        NewApi.UpdateDeleteStatus;\n        let currentAction = _.tableOption.actions.find(item => {\n          return item.key == element.id;\n        });\n        let param = {};\n        param[\"isDelete\"] = rowItem[currentAction.statuKey] ? 0 : 1;\n        param[_.tableOption.uniqueId] = rowItem[_.tableOption.uniqueId];\n\n        NewApi.UpdateDeleteStatus(param).then(res => {\n          baseObject.$refs.table.operation(\"refresh\");\n        });\n      }\n    },\n    componentMountBefore: function(element, basepage) {\n      debugger;\n    },\n    componentMountAfter: function(element, basepage) {},\n     // 编辑模态框中  组件值发生变化\n    componentValueChange: function(element, basepage) {\n      let editChildArr = basepage.$refs.editModule.$refs.child || [];\n      if (element.options.key == \"organiztionId\") {\n        let target = editChildArr.find(item => {\n          return item.options.key == \"appSecret\";\n        });\n        target.setValue(element.val);\n        // debugger;\n      }\n    }\n  },\n  components: { vBasePage }\n};\n",{"version":3,"sources":["New.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"New.vue","sourceRoot":"src/views/NewModule/ShellGlobalCode","sourcesContent":["<template>\n  <vBasePage\n    :searchOptions=\"searchOptions\"\n    :buttonOptions=\"buttonOptions\"\n    :editOptions=\"editOptions\"\n    :tableOption=\"tableOption\"\n    @rowBlock=\"rowClick\"\n    @componentMountBefore=\"componentMountBefore\"\n    @componentMountAfter=\"componentMountAfter\"\n    @componentValueChange=\"componentValueChange\"\n\n  ></vBasePage>\n</template>\n\n<script>\nimport vBasePage from \"../../BasePage/BasePage\";\nimport NewApi from \"../webapi/New\";\nimport config from \"@/config/index\";\n\nvar TableUniqueId = \"appId\";\nvar TerminalType = {\n  \"1\": \"总控\",\n  \"2\": \"分控\",\n  \"3\": \"HubApp\",\n  \"4\": \"CCN\"\n};\nexport default {\n  data() {\n    return {\n      searchOptions: {\n        searchOptions: {\n          requiredCondition: false\n        },\n        seleFunc: {\n          export: false,\n          search: true\n        },\n        // exportUrl: NewApi.GetAppInfoList,\n        search_controls: [\n          {\n            type: \"v_singleSelect\",\n            title: \"部署点\",\n            key: \"OrganiztionId\",\n            apiUrl: NewApi.GetOrganiztionList,\n            //params: { aaa: \"fff\" },\n            selectkey: \"organiztionId\",\n            selectvalue: \"organiztionSN\"\n          },\n          {\n            type: \"v_singleSelect\",\n            title: \"状态\",\n            key: \"isDelete\",\n            data: [\n              {\n                typeid: 0,\n                typename: \"启用\"\n              },\n              {\n                typeid: 1,\n                typename: \"禁用\"\n              }\n            ],\n            selectkey: \"typeid\",\n            selectvalue: \"typename\"\n          },\n          {\n            type: \"v_singleSelect\",\n            title: \"设备类型\",\n            key: \"TerminalType\",\n            data: [\n              {\n                id: \"1\",\n                value: \"总控\"\n              },\n              {\n                id: \"2\",\n                value: \"分控\"\n              },\n              {\n                id: \"3\",\n                value: \"HubApp\"\n              },\n              {\n                id: \"4\",\n                value: \"CCN\"\n              }\n            ],\n            selectkey: \"id\",\n            selectvalue: \"value\"\n          }\n        ]\n      },\n      buttonOptions: [\n        {\n          title: \"添加\",\n          key: \"add\",\n          enable: true,\n          iconStr: \"fa-plus\"\n        }\n      ],\n      editOptions: {\n        dynamicEdits: {\n          apiUrl: NewApi.SubmitAppInfo,\n          // params: {\"test\": \"111\"},\n          list: [\n            {\n              lineType: \"single\",\n              rowList: [\n                {\n                  type: \"v_singleSelect\",\n                  title: \"部署点\",\n                  key: \"organiztionId\",\n                  apiUrl: NewApi.GetOrganiztionList,\n                  hasValChange: true,\n                  //params: { aaa: \"fff\" },\n                  selectkey: \"organiztionId\",\n                  selectvalue: \"organiztionSN\"\n                },\n                {\n                  type: \"v_text\",\n                  title: \"AppSecret\",\n                  key: \"appSecret\",\n                  isRequest: true,\n                  editDisabled: true, //编辑环境下是否禁用\n                  addDisabled: true, //添加环境下是否禁用\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"AppSecret不能为空\"\n                    },\n                    regexp: {\n                      regexp: /^[A-Za-z0-9]+$/i,\n                      message: \"AppKey只能由字母字符和数字组成\"\n                    },\n                    stringLength: {\n                      max: 50,\n                      message: \"AppSecret最多只能输入50字\"\n                    }\n                  }\n                },\n                {\n                  type: \"v_upload\",\n                  key: \"uploadFile\",\n                  title: \"请选择上传图片\",\n                  isRequest: true,\n                  uploadNum: 3, // 文件数量,默认为1，多张图片以，号拼接字符串形式提交\n                  fileSizeLimit: 3, // 文件大小  以兆为单位\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"选择上传的文件不能为空\"\n                    }\n                  }\n                },\n                {\n                  type: \"v_upload\",\n                  key: \"uploadFile1\",\n                  title: \"请选择上传图片\",\n                  isRequest: true,\n                  uploadNum: 3, // 文件数量,默认为1，多张图片以，号拼接字符串形式提交\n                  fileSizeLimit: 3, // 文件大小  以兆为单位\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"选择上传的文件不能为空\"\n                    }\n                  }\n                },\n                {\n                  type: \"v_upload\",\n                  key: \"uploadFile2\",\n                  title: \"请选择上传图片\",\n                  isRequest: true,\n                  uploadNum: 3, // 文件数量,默认为1，多张图片以，号拼接字符串形式提交\n                  fileSizeLimit: 3, // 文件大小  以兆为单位\n                  validators: {\n                    notEmpty: {\n                      enabled: true,\n                      message: \"选择上传的文件不能为空\"\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      },\n      tableOption: {\n        tableId: \"proofreport\",\n        tableName: \"凭据统计报表\",\n        url: config.pgyerApiUrl + NewApi.GetAppInfoList.options.url,\n        method: NewApi.GetAppInfoList.options.method,\n        uniqueId: TableUniqueId,\n        actions: [\n          {\n            key: \"tableEdit\",\n            title: \"编辑\",\n            url: NewApi.GetAppInfoById,\n            method: NewApi.GetAppInfoById.method,\n            // params: {\n            //   aaa: \"fff\"\n            // },\n            tabIdx: 2\n          },\n          {\n            key: \"tablePause\",\n            statuKey: \"isDelete\",\n            // statuObj: {\n            //   'false': \"启用\",\n            //   'true': \"禁用\"\n            // },\n            title: \"启用/禁用\",\n            tabIdx: 0\n          },\n          {\n            key: \"tableDownload\",\n            url: NewApi.GetAppXMLDownLoadUrl,\n            method: NewApi.GetAppXMLDownLoadUrl.method,\n            title: \"下载\",\n            tabIdx: 1\n          }\n        ],\n        columns: [\n          {\n            field: \"organiztionSN\",\n            title: \"产品编码\",\n            align: \"center\"\n          },\n          {\n            field: \"appKey\",\n            title: \"产品名称\",\n            align: \"center\"\n          },\n          {\n            field: \"appSecret\",\n            title: \"生产批号\",\n            align: \"center\"\n          },\n          {\n            field: \"terminalType\",\n            title: \"上传日期\",\n            align: \"center\",\n            formatter: function(val, row) {\n              return TerminalType[row.terminalType];\n            }\n          }\n        ]\n      }\n    };\n  },\n  methods: {\n    rowClick: function(rowItem, element, baseObject) {\n      console.log(element);\n      let _ = this;\n      if (element.id == \"tablePause\") {\n        NewApi.UpdateDeleteStatus;\n        let currentAction = _.tableOption.actions.find(item => {\n          return item.key == element.id;\n        });\n        let param = {};\n        param[\"isDelete\"] = rowItem[currentAction.statuKey] ? 0 : 1;\n        param[_.tableOption.uniqueId] = rowItem[_.tableOption.uniqueId];\n\n        NewApi.UpdateDeleteStatus(param).then(res => {\n          baseObject.$refs.table.operation(\"refresh\");\n        });\n      }\n    },\n    componentMountBefore: function(element, basepage) {\n      debugger;\n    },\n    componentMountAfter: function(element, basepage) {},\n     // 编辑模态框中  组件值发生变化\n    componentValueChange: function(element, basepage) {\n      let editChildArr = basepage.$refs.editModule.$refs.child || [];\n      if (element.options.key == \"organiztionId\") {\n        let target = editChildArr.find(item => {\n          return item.options.key == \"appSecret\";\n        });\n        target.setValue(element.val);\n        // debugger;\n      }\n    }\n  },\n  components: { vBasePage }\n};\n</script>\n\n"]}]}