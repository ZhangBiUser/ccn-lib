{"remainingRequest":"/Users/hq_failmy/Desktop/封装控件/node_modules/babel-loader/lib/index.js!/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hq_failmy/Desktop/封装控件/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_failmy/Desktop/封装控件/src/views/BasePage/BasePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_failmy/Desktop/封装控件/src/views/BasePage/BasePage.vue","mtime":1555409684406},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/封装控件/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport vTable from \"@c/tables/table\";\nimport vSearch from \"@c/dynamicSearch/dynamic_Search\";\nimport vEditTable from \"@c/edit_table\";\nimport vButtons from \"@c/buttons\";\nimport moment from \"moment\";\nimport config from \"@/config/index\";\nimport { pageTool } from \"@/js/util.js\";\nexport default {\n  data: function data() {\n    var _ = this;\n\n    return {\n      isEdit: false,\n      seleTableObj: {} // 选中的表单行数据\n\n    };\n  },\n  // props: [\"searchOptions\", \"buttonOptions\", \"editOptions\", \"tableOption\"],\n  props: {\n    searchOptions: {\n      type: Object,\n      default: function _default() {}\n    },\n    buttonOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    editOptions: {\n      type: Object,\n      default: function _default() {}\n    },\n    tableOption: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  beforeMount: function beforeMount() {\n    var _ = this;\n\n    !$.isEmptyObject(this.buttonOptions) && this.buttonOptions.map(function (item) {\n      if (item.key == \"add\") {\n        item.method = function () {\n          _.showAddRecordModal();\n        };\n      }\n    });\n    this.handleText();\n  },\n  computed: {\n    exportOptions: function exportOptions() {\n      return {\n        id: this.tableOption.tableId,\n        name: this.tableOption.tableName,\n        url: this.searchOptions.exportUrl\n      };\n    }\n  },\n  mounted: function mounted() {},\n  methods: {\n    // 如果给列设置宽度，超出部分文字隐藏显示\n    handleText: function handleText() {\n      this.tableOption.columns.map(function (item) {\n        if (\"width\" in item) {\n          item.cellStyle = function (value, row, index) {\n            // 设置超过行宽以省略号显示\n            return {\n              css: {\n                overflow: \"hidden\",\n                \"text-overflow\": \"ellipsis\",\n                \"white-space\": \"nowrap\",\n                display: \"inline-block\"\n              }\n            };\n          };\n\n          item.formatter = function (value, row, index) {\n            var span = document.createElement(\"span\");\n            span.setAttribute(\"title\", value);\n            span.innerHTML = value;\n            return span.outerHTML;\n          };\n        }\n      });\n    },\n    rowClick: function rowClick(rowItem, element) {\n      var _ = this; // debugger;\n\n\n      var currentAction = _.searchUrl(element);\n\n      if (!currentAction.url) {\n        _.$emit(\"rowBlock\", rowItem, element, _);\n\n        return;\n      }\n\n      var param = {};\n      param[_.tableOption.uniqueId] = rowItem[_.tableOption.uniqueId];\n      $.extend(param, currentAction.params);\n      currentAction.url(param).then(function (res) {\n        // debugger;\n        switch (element.id) {\n          case \"tableEdit\":\n            {\n              _.seleTableObj = res.result;\n\n              _.showAddRecordModal();\n            }\n            break;\n          // case \"tablePause\":\n          //   {\n          //     _.$refs.table.operation(\"refresh\");\n          //   }\n          //   break;\n\n          case \"tableDownload\":\n            {\n              // location.href = res.result.uploadUrl;\n              // window.open(res.result.uploadUrl);\n              var html = '<a id=\"download-file\" href=\"data:text/xml;charset=utf-8,' + encodeURIComponent(res.result.uploadUrl) + '\" download=\"99\">下载</a>'; // var html = '<a id=\"download-file\" href=' + res.result.uploadUrl + ' download=\"5cd1e027d74f49a88c70a23a5e7b1550.Xml\">下载</a>';\n\n              $(\"#downloaddiv\").html(html);\n              $('#download-file')[0].click();\n            }\n            break;\n\n          default:\n            {\n              _.$emit(\"rowBlock\", rowItem, element, _);\n            }\n            break;\n        }\n      });\n    },\n    componentValueChange: function componentValueChange(element) {\n      this.$emit('componentValueChange', element, this);\n    },\n    componentMountBefore: function componentMountBefore(element) {\n      this.$emit('componentMountBefore', element, this);\n    },\n    componentMountAfter: function componentMountAfter(element) {\n      // debugger;\n      this.$emit('componentMountAfter', element, this);\n    },\n    searchUrl: function searchUrl(element) {\n      for (var i = 0; i < this.tableOption.actions.length; i++) {\n        var actionItem = this.tableOption.actions[i];\n\n        if (actionItem.key == element.id) {\n          return actionItem;\n        }\n      }\n    },\n    // 动态搜索回调\n    search: function search(params) {\n      console.log(params);\n      this.refreshTable(params);\n    },\n    // 新建 & 编辑表单记录完成后的回调事件\n    editCallback: function editCallback(type, params) {\n      // type = add   type = edit\n      this.$refs.table.operation(\"refresh\");\n    },\n    // 刷新表单\n    refreshTable: function refreshTable(params) {\n      // this.$refs.table.tableOption.url =\n      // config.pgyerApiUrl + ShellApi.GetAppInfoList.options.url;\n      // this.$refs.table.tableOption.url = this.$refs.table.tableOption.url;\n      this.$refs.table.tableOption.params = params;\n      this.$refs.table.operation(\"refresh\");\n    },\n    // 显示新建 & 编辑表单记录弹框\n    showAddRecordModal: function showAddRecordModal() {\n      var _ = this;\n\n      _.isEdit = true;\n\n      _.$nextTick(function () {\n        _.layerId = layer.open({\n          type: 1,\n          title: _.seleTableObj ? \"编辑记录\" : \"添加记录\",\n          maxmin: false,\n          area: [\"70%\", \"70%\"],\n          content: $(\"#pop\"),\n          end: function end() {\n            _.isEdit = false;\n            _.seleTableObj = {};\n          }\n        });\n      });\n    }\n  },\n  components: {\n    vTable: vTable,\n    vSearch: vSearch,\n    vEditTable: vEditTable,\n    vButtons: vButtons\n  }\n};",{"version":3,"sources":["BasePage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"box box-default\">\n      <div class=\"box-body box-body-resizer\">\n        <form class=\"form-inline\" id=\"search-query\" style=\"display: inline-block;\n    width: 100%;\">\n          <div class=\"search-bar\" style=\"float:left;width:99%;position: relative;\">\n            <vSearch ref=\"searchModule\"\n              v-bind:dynamicControls=\"searchOptions.search_controls\"\n              v-bind:exportOptions=\"exportOptions\"\n              v-bind:searchOptions=\"searchOptions.searchOptions\"\n              v-bind:seleFunc=\"searchOptions.seleFunc\"\n              @callback=\"search\"\n              style=\"float:left\"\n            ></vSearch>\n            <br>\n          </div>\n        </form>\n\n        <div v-if=\"buttonOptions.length\" style=\"position: relative;height: 60px;\">\n          <vButtons :buttonOptions=\"buttonOptions\"></vButtons>\n        </div>\n        <vEditTable\n          v-if=\"isEdit\"\n          id=\"pop\"\n          ref=\"editModule\"\n          :dynamicEdits=\"editOptions.dynamicEdits\"\n          :seleTableObj=\"seleTableObj\"\n          @editCallback=\"editCallback\"\n          @componentValueChange=\"componentValueChange\"\n          @componentMountBefore=\"componentMountBefore\" @componentMountAfter=\"componentMountAfter\"\n        ></vEditTable>\n\n        <vTable ref=\"table\" :option=\"tableOption\" @rowBlock=\"rowClick\"></vTable>\n        <div id=\"downloaddiv\" style=\"opaticy: 0\" ></div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport vTable from \"@c/tables/table\";\nimport vSearch from \"@c/dynamicSearch/dynamic_Search\";\nimport vEditTable from \"@c/edit_table\";\nimport vButtons from \"@c/buttons\";\n\nimport moment from \"moment\";\nimport config from \"@/config/index\";\nimport { pageTool } from \"@/js/util.js\";\n\nexport default {\n  data() {\n    var _ = this;\n    return {\n      isEdit: false,\n      seleTableObj: {} // 选中的表单行数据\n    };\n  },\n  // props: [\"searchOptions\", \"buttonOptions\", \"editOptions\", \"tableOption\"],\n  props: {\n    searchOptions: {\n      type: Object,\n      default: () => {}\n    },\n    buttonOptions: {\n      type: Array,\n      default: () => []\n    },\n    editOptions: {\n      type: Object,\n      default: () => {}\n    },\n    tableOption: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  beforeMount() {\n    let _ = this;\n    !$.isEmptyObject(this.buttonOptions) &&\n      this.buttonOptions.map(item => {\n        if (item.key == \"add\") {\n          item.method = function() {\n            _.showAddRecordModal();\n          };\n        }\n      });\n    this.handleText();\n  },\n\n  computed: {\n    exportOptions: function() {\n      return {\n        id: this.tableOption.tableId,\n        name: this.tableOption.tableName,\n        url: this.searchOptions.exportUrl\n      };\n    }\n  },\n  mounted: function() {},\n  methods: {\n    // 如果给列设置宽度，超出部分文字隐藏显示\n    handleText: function() {\n      this.tableOption.columns.map(item => {\n        if (\"width\" in item) {\n          item.cellStyle = function(value, row, index) {\n            // 设置超过行宽以省略号显示\n            return {\n              css: {\n                overflow: \"hidden\",\n                \"text-overflow\": \"ellipsis\",\n                \"white-space\": \"nowrap\",\n                display: \"inline-block\"\n              }\n            };\n          };\n          item.formatter = function(value, row, index) {\n            var span = document.createElement(\"span\");\n            span.setAttribute(\"title\", value);\n            span.innerHTML = value;\n            return span.outerHTML;\n          };\n        }\n      });\n    },\n    rowClick: function(rowItem, element) {\n      let _ = this;\n      // debugger;\n      let currentAction = _.searchUrl(element);\n      if (!currentAction.url) {\n        _.$emit(\"rowBlock\", rowItem, element, _);\n        return;\n      }\n\n      let param = {};\n      param[_.tableOption.uniqueId] = rowItem[_.tableOption.uniqueId];\n      $.extend(param, currentAction.params);\n\n      currentAction.url(param).then(res => {\n        // debugger;\n        switch (element.id) {\n          case \"tableEdit\":\n            {\n              _.seleTableObj = res.result;\n              _.showAddRecordModal();\n            }\n            break;\n          // case \"tablePause\":\n          //   {\n          //     _.$refs.table.operation(\"refresh\");\n          //   }\n          //   break;\n          case \"tableDownload\":\n            {\n              // location.href = res.result.uploadUrl;\n              // window.open(res.result.uploadUrl);\n              var html = '<a id=\"download-file\" href=\"data:text/xml;charset=utf-8,' + encodeURIComponent(res.result.uploadUrl) + '\" download=\"99\">下载</a>';\n              // var html = '<a id=\"download-file\" href=' + res.result.uploadUrl + ' download=\"5cd1e027d74f49a88c70a23a5e7b1550.Xml\">下载</a>';\n              $(\"#downloaddiv\").html(html);\n              $('#download-file')[0].click();\n\n            }\n            break;\n          default:\n            {\n              _.$emit(\"rowBlock\", rowItem, element, _);\n            }\n            break;\n        }\n      });\n    },\n    componentValueChange: function(element) {\n      this.$emit('componentValueChange',element,this);\n    },\n    componentMountBefore: function(element) {\n      this.$emit('componentMountBefore',element,this);\n    },\n    componentMountAfter: function(element) {\n      // debugger;\n      this.$emit('componentMountAfter',element,this);\n    },\n    searchUrl: function(element) {\n      for (let i = 0; i < this.tableOption.actions.length; i++) {\n        let actionItem = this.tableOption.actions[i];\n        if (actionItem.key == element.id) {\n          return actionItem;\n        }\n      }\n    },\n    // 动态搜索回调\n    search: function(params) {\n      console.log(params);\n      this.refreshTable(params);\n    },\n    // 新建 & 编辑表单记录完成后的回调事件\n    editCallback: function(type, params) {\n      // type = add   type = edit\n      this.$refs.table.operation(\"refresh\");\n    },\n    // 刷新表单\n    refreshTable: function(params) {\n      // this.$refs.table.tableOption.url =\n      // config.pgyerApiUrl + ShellApi.GetAppInfoList.options.url;\n      // this.$refs.table.tableOption.url = this.$refs.table.tableOption.url;\n      this.$refs.table.tableOption.params = params;\n      this.$refs.table.operation(\"refresh\");\n    },\n    // 显示新建 & 编辑表单记录弹框\n    showAddRecordModal: function() {\n      let _ = this;\n      _.isEdit = true;\n      _.$nextTick(() => {\n        _.layerId = layer.open({\n          type: 1,\n          title: _.seleTableObj ? \"编辑记录\" : \"添加记录\",\n          maxmin: false,\n          area: [\"70%\", \"70%\"],\n          content: $(\"#pop\"),\n          end: function() {\n            _.isEdit = false;\n            _.seleTableObj = {};\n          }\n        });\n      });\n    }\n  },\n\n  components: { vTable, vSearch, vEditTable, vButtons }\n};\n</script>\n<style>\ntable tr td {\n  border: 1px solid #f4f4f4;\n}\n.datetimepicker {\n  z-index: 21212121 !important;\n}\n</style>\n\n"],"sourceRoot":"src/views/BasePage"}]}