{"remainingRequest":"/Users/hq_failmy/Desktop/文件上传管理/node_modules/babel-loader/lib/index.js!/Users/hq_failmy/Desktop/文件上传管理/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hq_failmy/Desktop/文件上传管理/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hq_failmy/Desktop/文件上传管理/src/components/edit_table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hq_failmy/Desktop/文件上传管理/src/components/edit_table.vue","mtime":1555048709166},{"path":"/Users/hq_failmy/Desktop/文件上传管理/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/文件上传管理/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport v_text from \"@c/dynamicSearch/text/text\";\nimport v_textarea from \"@c/dynamicSearch/text/textarea\";\nimport v_datetime from \"@c/dynamicSearch/datetime/datetime\";\nimport v_singleSelect from \"@c/dynamicSearch/select/singleSelect\";\nimport v_doubleSelect from \"@c/dynamicSearch/select/doubleSelect\";\nimport { export_json_to_excel } from \"@/excel/Export2Excel.js\";\nvar ComponentType = {\n  doubleSelect: 'v_doubleSelect',\n  singleSelect: 'v_singleSelect',\n  text: 'v_text',\n  dateSelect: 'v_datetime',\n  textarea: 'v_textarea'\n};\nexport default {\n  data: function data() {\n    return {\n      componentNum: 0,\n      //统计当前组件中(类型 != v_text)组件数量 （这两种类型组件都需要通过请求刷新选择数据）\n      loadNum: 0,\n      //已经渲染完成的 （类型 != v_text）组件数量\n      validateArr: null //需要校验组件信息集\n\n    };\n  },\n  // seleTableObj 需要编辑信息内容\n  props: {\n    dynamicEdits: {\n      isRequest: true\n    },\n    seleTableObj: {\n      type: Object,\n      default: null\n    }\n  },\n  // props: [\"dynamicEdits\", \"seleTableObj\"],\n  beforeMount: function beforeMount() {\n    this.cacularSelectNum();\n  },\n  mounted: function mounted() {\n    // 设置表格校验信息\n    this.initValidate(this.validateArr);\n  },\n  methods: {\n    // 计算选择框的数量 &  收集需要校验的控件数组\n    cacularSelectNum: function cacularSelectNum() {\n      var _ = this;\n\n      _.validateArr = [];\n      this.dynamicEdits.list.map(function (item) {\n        item.rowList.forEach(function (subItem) {\n          juidgeComponentType(subItem);\n\n          if (subItem.list) {\n            subItem.list.map(function (innerItem) {\n              _.validateArr.push({\n                key: innerItem.selectkey,\n                validators: innerItem.validators ? innerItem.validators : {}\n              });\n            });\n          } else {\n            _.validateArr.push({\n              key: subItem.type == ComponentType.singleSelect ? subItem.selectkey : subItem.key,\n              validators: subItem.validators ? subItem.validators : {}\n            });\n          }\n        });\n      });\n\n      function juidgeComponentType(currentItem) {\n        currentItem.type != ComponentType.text && currentItem.type != ComponentType.textarea && _.componentNum++;\n      }\n    },\n    // 给组件赋初始值\n    init: function init() {\n      var _ = this;\n\n      this.$refs.child.forEach(function (item) {\n        if (item.options.type == ComponentType.doubleSelect) {\n          for (var key in item.$refs.selectList) {\n            var subItem = item.$refs.selectList[key];\n            subItem.options.key && subItem.setValue(_.seleTableObj[subItem.options.selectkey]);\n          }\n        } else if (item.options.type == ComponentType.singleSelect) {\n          item.setValue(_.seleTableObj[item.options.selectkey]);\n        } else {\n          var currentValue = _.seleTableObj[item.options.key];\n          currentValue && item.setValue(currentValue);\n        }\n      });\n    },\n    // 子控件渲染完成回调   不包含v_text\n    loadCallBack: function loadCallBack() {\n      if ($.isEmptyObject(this.seleTableObj)) return;\n      this.loadNum++;\n      this.componentNum == this.loadNum && this.init();\n    },\n    // 点击保存按钮\n    saveRecord: function saveRecord() {\n      var _ = this; // 开启校验\n\n\n      $(this.$refs.formBody).data(\"bootstrapValidator\").validate();\n      var flag = $(this.$refs.formBody).data(\"bootstrapValidator\").isValid();\n      if (!flag) return; // 收集param\n\n      var result = {};\n\n      if (!$.isEmptyObject(_.seleTableObj)) {\n        result = _.seleTableObj;\n      }\n\n      this.$refs.child.forEach(function (item) {\n        if (item.options.type == ComponentType.doubleSelect) {\n          for (var key in item.val) {\n            result[key] = item.val[key];\n          }\n        } else if (item.options.type == ComponentType.dateSelect) {\n          result[item.options.key] = item.$refs.datetime.value;\n        } else if (item.options.type == ComponentType.singleSelect) {\n          // result[item.options.key] = item.val();\n          result[item.options.key] = item.getValue();\n        } else {\n          result[item.options.key] = item.val;\n        }\n      });\n      this.submitReq(result);\n    },\n    // 发送保存数据的请求\n    submitReq: function submitReq(result) {\n      // this.dynamicEdits.apiUrl\n      var _ = this;\n\n      if ('params' in this.dynamicEdits) {\n        $.extend(result, this.dynamicEdits.params);\n      }\n\n      debugger;\n      this.dynamicEdits.apiUrl(result).then(function (res) {\n        debugger;\n\n        if (res.success) {\n          // 关闭所有页面层\n          layer.closeAll(\"page\");\n          layer.msg(\"数据保存成功\");\n\n          _.$emit(\"editCallback\", _.seleTableObj ? \"edit\" : \"add\", result);\n        } else {\n          layer.alert(res.message);\n        }\n      });\n    },\n    // 设置表格校验信息\n    initValidate: function initValidate(validateArr) {\n      var fieldArr = {};\n      this.validateArr.map(function (item) {\n        fieldArr[item.key] = {\n          validators: item.validators\n        };\n      });\n      this.validator = $(this.$refs.formBody).bootstrapValidator({\n        fields: fieldArr\n      });\n    }\n  },\n  components: {\n    v_text: v_text,\n    v_datetime: v_datetime,\n    v_singleSelect: v_singleSelect,\n    v_doubleSelect: v_doubleSelect,\n    v_textarea: v_textarea\n  }\n};",{"version":3,"sources":["edit_table.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <form class=\"edit form-inline\" ref=\"formBody\">\n    <template v-for=\"(item, index) in dynamicEdits.list\">\n      <div\n        class=\"form-group\"\n        :style=\"'width:' + (item.lineType == 'single' ? '100% ': '50%')+';margin-bottom: 10px;'\"\n        :key=\"rowItem.key+index\"\n        v-for=\"rowItem in item.rowList\"\n      >\n        <label class=\"v_mark control-label\">\n          <span>{{rowItem.isRequest ? '*' : ''}}</span>\n          {{rowItem.type == 'v_doubleSelect'?rowItem.list[0].title+':':rowItem.title + ':'}}\n        </label>\n        <component\n          :class=\"rowItem.type == 'v_doubleSelect' ? 'leftmove' : ''\"\n          v-bind:is=\"rowItem.type\"\n          ref=\"child\"\n          v-bind:options=\"rowItem\"\n          style=\"width: 50%;display: inline;\"\n          @loadCallBack=\"loadCallBack\"\n        ></component>\n      </div>\n    </template>\n\n    <div class=\"v_saveView\">\n      <button class=\"btn btn-primary v_saveBtn\" @click=\"saveRecord\">保存</button>\n    </div>\n  </form>\n</template>\n\n\n<style scope>\n.leftmove .form-group.has-error .help-block {\n  margin-left: 0px !important;\n}\n.edit {\n  padding-top: 30px;\n  padding-bottom: 30px;\n}\n.v_mark {\n  line-height: 40px;\n  min-width: 150px;\n  text-align: right;\n  padding-right: 20px;\n}\n.v_mark span {\n  color: red;\n}\n.v_saveView {\n  position: relative;\n  margin-top: 50px;\n  width: 100%;\n  height: 50px;\n  text-align: center;\n}\n.v_saveBtn {\n  left: 0;\n  right: 0;\n  width: 80px;\n  height: 40px;\n  margin: auto;\n}\n.bv-form .help-block {\n  margin-left: 150px !important;\n}\n.has-error .control-label {\n  color: black !important;\n}\n/* .leftmove .form-group {\n  margin-right: 30px;\n} */\n.has-success .leftmove .form-group.has-error .bootstrap-select .dropdown-toggle {\n  border-color: #ccc;\n}\n.leftmove .form-group.has-error .help-block {\n  display: none !important;\n}\n</style>\n\n<script>\nimport v_text from \"@c/dynamicSearch/text/text\";\nimport v_textarea from \"@c/dynamicSearch/text/textarea\";\nimport v_datetime from \"@c/dynamicSearch/datetime/datetime\";\nimport v_singleSelect from \"@c/dynamicSearch/select/singleSelect\";\nimport v_doubleSelect from \"@c/dynamicSearch/select/doubleSelect\";\nimport { export_json_to_excel } from \"@/excel/Export2Excel.js\";\n\nvar ComponentType = {\n  doubleSelect: 'v_doubleSelect',\n  singleSelect: 'v_singleSelect',\n  text: 'v_text',\n  dateSelect: 'v_datetime',\n  textarea: 'v_textarea'\n};\nexport default {\n  data() {\n    return {\n      componentNum: 0, //统计当前组件中(类型 != v_text)组件数量 （这两种类型组件都需要通过请求刷新选择数据）\n      loadNum: 0, //已经渲染完成的 （类型 != v_text）组件数量\n      validateArr: null //需要校验组件信息集\n    };\n  },\n  // seleTableObj 需要编辑信息内容\n  props: {\n    dynamicEdits: {\n      isRequest: true\n    },\n    seleTableObj: {\n      type: Object,\n      default: null,\n    }\n  },\n  // props: [\"dynamicEdits\", \"seleTableObj\"],\n  beforeMount() {\n    this.cacularSelectNum();\n  },\n  mounted() {\n    // 设置表格校验信息\n    this.initValidate(this.validateArr);\n  },\n  methods: {\n    // 计算选择框的数量 &  收集需要校验的控件数组\n    cacularSelectNum: function() {\n      let _ = this;\n      _.validateArr = [];\n      this.dynamicEdits.list.map(item => {\n        item.rowList.forEach(subItem => {\n          juidgeComponentType(subItem);\n          if (subItem.list) {\n            subItem.list.map(innerItem => {\n              _.validateArr.push({\n                key: innerItem.selectkey,\n                validators: innerItem.validators ? innerItem.validators : {}\n              });\n            });\n          } else {\n            _.validateArr.push({\n              key:\n                subItem.type == ComponentType.singleSelect\n                  ? subItem.selectkey\n                  : subItem.key,\n              validators: subItem.validators ? subItem.validators : {}\n            });\n          }\n        });\n      });\n\n      function juidgeComponentType(currentItem) {\n        currentItem.type != ComponentType.text && currentItem.type != ComponentType.textarea && _.componentNum++;\n      }\n    },\n    // 给组件赋初始值\n    init: function() {\n      let _ = this;\n      this.$refs.child.forEach(item => {\n        if (item.options.type == ComponentType.doubleSelect) {\n          for (var key in item.$refs.selectList) {\n            let subItem = item.$refs.selectList[key];\n            subItem.options.key &&\n              subItem.setValue(_.seleTableObj[subItem.options.selectkey]);\n          }\n        } else if (item.options.type == ComponentType.singleSelect) {\n          item.setValue(_.seleTableObj[item.options.selectkey]);\n        } else {\n          let currentValue = _.seleTableObj[item.options.key];\n          currentValue && item.setValue(currentValue);\n        }\n      });\n    },\n    // 子控件渲染完成回调   不包含v_text\n    loadCallBack: function() {\n      if ($.isEmptyObject(this.seleTableObj)) return;\n      this.loadNum++;\n      this.componentNum == this.loadNum && this.init();\n    },\n    // 点击保存按钮\n    saveRecord: function() {\n      let _ = this;\n      // 开启校验\n      $(this.$refs.formBody)\n        .data(\"bootstrapValidator\")\n        .validate();\n      var flag = $(this.$refs.formBody)\n        .data(\"bootstrapValidator\")\n        .isValid();\n      if (!flag) return;\n\n      // 收集param\n      var result = {};\n      if (!$.isEmptyObject(_.seleTableObj)) {\n        result = _.seleTableObj;\n      }\n      this.$refs.child.forEach(item => {\n        if (item.options.type == ComponentType.doubleSelect) {\n          for (var key in item.val) {\n            result[key] = item.val[key];\n          }\n        } else if (item.options.type == ComponentType.dateSelect) {\n          result[item.options.key] = item.$refs.datetime.value;\n        } else if(item.options.type == ComponentType.singleSelect){\n          // result[item.options.key] = item.val();\n          result[item.options.key] = item.getValue();\n        }else{\n          result[item.options.key] = item.val;\n        }\n      });\n      this.submitReq(result);\n    },\n    // 发送保存数据的请求\n    submitReq: function(result) {\n      // this.dynamicEdits.apiUrl\n      let _ = this;\n      if ('params' in this.dynamicEdits) {\n        $.extend(result,this.dynamicEdits.params);\n      }\n      debugger;\n      this.dynamicEdits.apiUrl(result).then(res => {\n        debugger;\n        if (res.success) {\n          // 关闭所有页面层\n          layer.closeAll(\"page\");\n          layer.msg(\"数据保存成功\");\n          _.$emit(\"editCallback\", _.seleTableObj ? \"edit\" : \"add\", result);\n        } else {\n          layer.alert(res.message);\n        }\n      });\n    },\n    // 设置表格校验信息\n    initValidate: function(validateArr) {\n      let fieldArr = {};\n      this.validateArr.map(item => {\n        fieldArr[item.key] = { validators: item.validators };\n      });\n      this.validator = $(this.$refs.formBody).bootstrapValidator({\n        fields: fieldArr\n      });\n    }\n  },\n  components: { v_text, v_datetime, v_singleSelect, v_doubleSelect, v_textarea }\n};\n</script>\n\n"],"sourceRoot":"src/components"}]}