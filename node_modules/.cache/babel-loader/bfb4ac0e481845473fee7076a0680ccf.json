{"remainingRequest":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/node_modules/babel-loader/lib/index.js!/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/src/views/CodeModule/mock/code.js","dependencies":[{"path":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/src/views/CodeModule/mock/code.js","mtime":1553140248000},{"path":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport Mock from 'mockjs';\nvar Random = Mock.Random;\nvar GetPageAllCodeFilesList = [];\n\nfor (var index = 0; index < 10; index++) {\n  var id = Random.int(10000, 20000);\n  GetPageAllCodeFilesList.push({\n    \"file_id\": id.toString(),\n    \"file_name\": \"我是文件名称\" + id,\n    \"upload_user\": Random.cname(),\n    \"upload_date\": Random.datetime(),\n    \"process_state\": Random.int(0, 3).toString(),\n    \"process_result\": Random.int(0, 2).toString()\n  });\n}\n\nMock.mock('/printFileCodeService/GetPageAllCodeFilesList', 'post', function (options) {\n  console.log(JSON.parse(options.body));\n  return {\n    \"result\": {\n      \"totalCount\": Random.int(1, 100),\n      \"items\": GetPageAllCodeFilesList\n    },\n    \"success\": true,\n    \"error\": null,\n    \"unAuthorizedRequest\": false\n  };\n  ;\n});\nMock.mock('/printFileCodeService/PrintFileUpload', 'post', function (options) {\n  console.log(JSON.parse(options.body));\n  return {\n    \"result\": [],\n    \"targetUrl\": null,\n    \"success\": false,\n    \"error\": {\n      \"code\": 0,\n      \"message\": \"文件已被上传过了\",\n      \"details\": null,\n      \"validationErrors\": null\n    },\n    \"unAuthorizedRequest\": false,\n    \"__abp\": true\n  };\n});\nMock.mock('/printFileCodeService/GetPageAllFileCodesList', 'post', function (options) {\n  console.log(JSON.parse(options.body));\n  var GetPageAllFileCodesList = [];\n\n  for (var _index = 0; _index < 10; _index++) {\n    var id = Random.int(10000, 20000);\n    GetPageAllFileCodesList.push({\n      \"code\": id.toString(),\n      \"f1\": Random.int(0, 1).toString(),\n      \"f2\": Random.int(0, 1).toString()\n    });\n  }\n\n  return {\n    \"result\": {\n      \"totalCount\": Random.int(1, 100),\n      \"items\": GetPageAllFileCodesList\n    },\n    \"success\": true,\n    \"error\": null,\n    \"unAuthorizedRequest\": false\n  };\n  ;\n});\nexport default Mock;",{"version":3,"sources":["/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/src/views/CodeModule/mock/code.js"],"names":["Mock","Random","GetPageAllCodeFilesList","index","id","int","push","toString","cname","datetime","mock","options","console","log","JSON","parse","body","GetPageAllFileCodesList"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,IAAMC,MAAM,GAAGD,IAAI,CAACC,MAApB;AACA,IAAIC,uBAAuB,GAAC,EAA5B;;AACA,KAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACrC,MAAIC,EAAE,GAACH,MAAM,CAACI,GAAP,CAAW,KAAX,EAAkB,KAAlB,CAAP;AACAH,EAAAA,uBAAuB,CAACI,IAAxB,CAA6B;AACzB,eAAUF,EAAE,CAACG,QAAH,EADe;AAEzB,iBAAY,WAASH,EAFI;AAGzB,mBAAcH,MAAM,CAACO,KAAP,EAHW;AAIzB,mBAAcP,MAAM,CAACQ,QAAP,EAJW;AAKzB,qBAAgBR,MAAM,CAACI,GAAP,CAAW,CAAX,EAAa,CAAb,EAAgBE,QAAhB,EALS;AAMzB,sBAAiBN,MAAM,CAACI,GAAP,CAAW,CAAX,EAAa,CAAb,EAAgBE,QAAhB;AANQ,GAA7B;AASH;;AACDP,IAAI,CAACU,IAAL,CAAU,+CAAV,EAA2D,MAA3D,EAAmE,UAACC,OAAD,EAAa;AAC5EC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,IAAnB,CAAZ;AACA,SAAO;AAAE,cAAU;AAAE,oBAAcf,MAAM,CAACI,GAAP,CAAW,CAAX,EAAa,GAAb,CAAhB;AAAmC,eAAUH;AAA7C,KAAZ;AAAmF,eAAW,IAA9F;AAAoG,aAAS,IAA7G;AAAmH,2BAAuB;AAA1I,GAAP;AAAyJ;AAC5J,CAHD;AAKAF,IAAI,CAACU,IAAL,CAAU,uCAAV,EAAmD,MAAnD,EAA2D,UAACC,OAAD,EAAa;AACpEC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,IAAnB,CAAZ;AACA,SAAO;AAAC,cAAS,EAAV;AAAa,iBAAY,IAAzB;AAA8B,eAAU,KAAxC;AAA8C,aAAQ;AAAC,cAAO,CAAR;AAAU,iBAAU,UAApB;AAA+B,iBAAU,IAAzC;AAA8C,0BAAmB;AAAjE,KAAtD;AAA6H,2BAAsB,KAAnJ;AAAyJ,aAAQ;AAAjK,GAAP;AACH,CAHD;AAKAhB,IAAI,CAACU,IAAL,CAAU,+CAAV,EAA2D,MAA3D,EAAmE,UAACC,OAAD,EAAa;AAC5EC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACK,IAAnB,CAAZ;AACA,MAAIC,uBAAuB,GAAC,EAA5B;;AACJ,OAAK,IAAId,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAG,EAA5B,EAAgCA,MAAK,EAArC,EAAyC;AACrC,QAAIC,EAAE,GAACH,MAAM,CAACI,GAAP,CAAW,KAAX,EAAkB,KAAlB,CAAP;AACAY,IAAAA,uBAAuB,CAACX,IAAxB,CAA6B;AACzB,cAAOF,EAAE,CAACG,QAAH,EADkB;AAEzB,YAAKN,MAAM,CAACI,GAAP,CAAW,CAAX,EAAa,CAAb,EAAgBE,QAAhB,EAFoB;AAGzB,YAAKN,MAAM,CAACI,GAAP,CAAW,CAAX,EAAa,CAAb,EAAgBE,QAAhB;AAHoB,KAA7B;AAKH;;AACD,SAAO;AAAE,cAAU;AAAE,oBAAcN,MAAM,CAACI,GAAP,CAAW,CAAX,EAAa,GAAb,CAAhB;AAAmC,eAAUY;AAA7C,KAAZ;AAAmF,eAAW,IAA9F;AAAoG,aAAS,IAA7G;AAAmH,2BAAuB;AAA1I,GAAP;AAAyJ;AACxJ,CAZD;AAeA,eAAejB,IAAf","sourcesContent":["import Mock from 'mockjs'\r\nconst Random = Mock.Random;\r\nvar GetPageAllCodeFilesList=[];\r\nfor (let index = 0; index < 10; index++) {\r\n    var id=Random.int(10000, 20000);\r\n    GetPageAllCodeFilesList.push({\r\n        \"file_id\":id.toString(),\r\n        \"file_name\":\"我是文件名称\"+id,\r\n        \"upload_user\":Random.cname(),\r\n        \"upload_date\":Random.datetime(),\r\n        \"process_state\":Random.int(0,3).toString() ,\r\n        \"process_result\":Random.int(0,2).toString()\r\n        });\r\n    \r\n}\r\nMock.mock('/printFileCodeService/GetPageAllCodeFilesList', 'post', (options) => {\r\n    console.log(JSON.parse(options.body));\r\n    return { \"result\": { \"totalCount\": Random.int(1,100), \"items\":  GetPageAllCodeFilesList}, \"success\": true, \"error\": null, \"unAuthorizedRequest\": false };;\r\n});\r\n\r\nMock.mock('/printFileCodeService/PrintFileUpload', 'post', (options) => {\r\n    console.log(JSON.parse(options.body));\r\n    return {\"result\":[],\"targetUrl\":null,\"success\":false,\"error\":{\"code\":0,\"message\":\"文件已被上传过了\",\"details\":null,\"validationErrors\":null},\"unAuthorizedRequest\":false,\"__abp\":true};\r\n});\r\n\r\nMock.mock('/printFileCodeService/GetPageAllFileCodesList', 'post', (options) => {\r\n    console.log(JSON.parse(options.body));\r\n    var GetPageAllFileCodesList=[];\r\nfor (let index = 0; index < 10; index++) {\r\n    var id=Random.int(10000, 20000);\r\n    GetPageAllFileCodesList.push({\r\n        \"code\":id.toString(),\r\n        \"f1\":Random.int(0,1).toString(),\r\n        \"f2\":Random.int(0,1).toString()\r\n        });\r\n}\r\nreturn { \"result\": { \"totalCount\": Random.int(1,100), \"items\":  GetPageAllFileCodesList}, \"success\": true, \"error\": null, \"unAuthorizedRequest\": false };;\r\n});\r\n\r\n\r\nexport default Mock"]}]}