{"remainingRequest":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/node_modules/babel-loader/lib/index.js!/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/src/views/UserModule/mock/user.js","dependencies":[{"path":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/src/views/UserModule/mock/user.js","mtime":1553140248000},{"path":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Mock from 'mockjs';\nvar Random = Mock.Random;\n\nvar produceNewsData = function produceNewsData() {\n  var articles = [];\n\n  for (var i = 0; i < 100; i++) {\n    var newArticleObject = {\n      title: Random.csentence(5, 30),\n      //  Random.csentence( min, max )\n      thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'),\n      // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\n      author_name: Random.cname(),\n      // Random.cname() 随机生成一个常见的中文姓名\n      date: Random.date() + ' ' + Random.time() // Random.date()指示生成的日期字符串的格式,默认为yyyy-MM-dd；Random.time() 返回一个随机的时间字符串\n\n    };\n    articles.push(newArticleObject);\n  }\n\n  return {\n    articles: articles\n  };\n};\n\nvar userList;\nMock.mock('/user/GetUserList', 'post', function (options) {\n  console.log(JSON.parse(options.body));\n  return {\n    \"result\": {\n      \"totalCount\": 4309,\n      \"items\": [{\n        \"title\": \"什么东西啊\",\n        \"text\": \"这是什么东西啊\",\n        \"voteCount\": 0,\n        \"answerCount\": 0,\n        \"viewCount\": 1,\n        \"creatorUserName\": \"Yunus Emre\",\n        \"creationTime\": \"2018-12-11T04:56:06.233\",\n        \"creatorUserId\": 3,\n        \"id\": 4309\n      }, {\n        \"title\": \"What is my name? Anyone can guess?\",\n        \"text\": \"You need to find my name\",\n        \"voteCount\": 0,\n        \"answerCount\": 1,\n        \"viewCount\": 6,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-10T15:58:39.837\",\n        \"creatorUserId\": 2,\n        \"id\": 4308\n      }, {\n        \"title\": \"teste\",\n        \"text\": \"teste\",\n        \"voteCount\": 0,\n        \"answerCount\": 0,\n        \"viewCount\": 1,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-10T14:24:58.347\",\n        \"creatorUserId\": 2,\n        \"id\": 4307\n      }, {\n        \"title\": \"gdfgsd\",\n        \"text\": \"gsdfg\",\n        \"voteCount\": 0,\n        \"answerCount\": 0,\n        \"viewCount\": 1,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-10T12:27:09.477\",\n        \"creatorUserId\": 2,\n        \"id\": 4306\n      }, {\n        \"title\": \"teste\",\n        \"text\": \"asdfasdfasd\",\n        \"voteCount\": 0,\n        \"answerCount\": 0,\n        \"viewCount\": 0,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-10T05:23:08.103\",\n        \"creatorUserId\": 2,\n        \"id\": 4305\n      }, {\n        \"title\": \"asc\",\n        \"text\": \"sac\",\n        \"voteCount\": 1,\n        \"answerCount\": 2,\n        \"viewCount\": 6,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-10T00:15:11.383\",\n        \"creatorUserId\": 2,\n        \"id\": 4304\n      }, {\n        \"title\": \"test\",\n        \"text\": \"tet\",\n        \"voteCount\": 1,\n        \"answerCount\": 3,\n        \"viewCount\": 18,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-08T13:20:36.12\",\n        \"creatorUserId\": 2,\n        \"id\": 4303\n      }, {\n        \"title\": \"hello\",\n        \"text\": \"abc\",\n        \"voteCount\": 0,\n        \"answerCount\": 2,\n        \"viewCount\": 9,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-08T09:49:56.233\",\n        \"creatorUserId\": 2,\n        \"id\": 4302\n      }, {\n        \"title\": \"vcxv\",\n        \"text\": \"vcxv\",\n        \"voteCount\": 0,\n        \"answerCount\": 0,\n        \"viewCount\": 0,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-07T21:19:02.73\",\n        \"creatorUserId\": 2,\n        \"id\": 4301\n      }, {\n        \"title\": \"dfsdfs\",\n        \"text\": \"dfsfsfs\",\n        \"voteCount\": 0,\n        \"answerCount\": 0,\n        \"viewCount\": 0,\n        \"creatorUserName\": \"System\",\n        \"creationTime\": \"2018-12-07T07:30:46.09\",\n        \"creatorUserId\": 2,\n        \"id\": 4300\n      }]\n    },\n    \"success\": true,\n    \"error\": null,\n    \"unAuthorizedRequest\": false\n  };\n  ;\n});\nvar userList;\nMock.mock('/user/GetUserListSelect', 'post', function (options) {\n  console.log(JSON.parse(options.body));\n  return {\n    \"result\": [{\n      \"title\": \"什么东西啊\",\n      \"text\": \"这是什么东西啊\",\n      \"voteCount\": 0,\n      \"answerCount\": 0,\n      \"viewCount\": 1,\n      \"creatorUserName\": \"Yunus Emre\",\n      \"creationTime\": \"2018-12-11T04:56:06.233\",\n      \"creatorUserId\": 3,\n      \"id\": 4309\n    }, {\n      \"title\": \"What is my name? Anyone can guess?\",\n      \"text\": \"You need to find my name\",\n      \"voteCount\": 0,\n      \"answerCount\": 1,\n      \"viewCount\": 6,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-10T15:58:39.837\",\n      \"creatorUserId\": 2,\n      \"id\": 4308\n    }, {\n      \"title\": \"teste\",\n      \"text\": \"teste\",\n      \"voteCount\": 0,\n      \"answerCount\": 0,\n      \"viewCount\": 1,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-10T14:24:58.347\",\n      \"creatorUserId\": 2,\n      \"id\": 4307\n    }, {\n      \"title\": \"gdfgsd\",\n      \"text\": \"gsdfg\",\n      \"voteCount\": 0,\n      \"answerCount\": 0,\n      \"viewCount\": 1,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-10T12:27:09.477\",\n      \"creatorUserId\": 2,\n      \"id\": 4306\n    }, {\n      \"title\": \"teste\",\n      \"text\": \"asdfasdfasd\",\n      \"voteCount\": 0,\n      \"answerCount\": 0,\n      \"viewCount\": 0,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-10T05:23:08.103\",\n      \"creatorUserId\": 2,\n      \"id\": 4305\n    }, {\n      \"title\": \"asc\",\n      \"text\": \"sac\",\n      \"voteCount\": 1,\n      \"answerCount\": 2,\n      \"viewCount\": 6,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-10T00:15:11.383\",\n      \"creatorUserId\": 2,\n      \"id\": 4304\n    }, {\n      \"title\": \"test\",\n      \"text\": \"tet\",\n      \"voteCount\": 1,\n      \"answerCount\": 3,\n      \"viewCount\": 18,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-08T13:20:36.12\",\n      \"creatorUserId\": 2,\n      \"id\": 4303\n    }, {\n      \"title\": \"hello\",\n      \"text\": \"abc\",\n      \"voteCount\": 0,\n      \"answerCount\": 2,\n      \"viewCount\": 9,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-08T09:49:56.233\",\n      \"creatorUserId\": 2,\n      \"id\": 4302\n    }, {\n      \"title\": \"vcxv\",\n      \"text\": \"vcxv\",\n      \"voteCount\": 0,\n      \"answerCount\": 0,\n      \"viewCount\": 0,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-07T21:19:02.73\",\n      \"creatorUserId\": 2,\n      \"id\": 4301\n    }, {\n      \"title\": \"dfsdfs\",\n      \"text\": \"dfsfsfs\",\n      \"voteCount\": 0,\n      \"answerCount\": 0,\n      \"viewCount\": 0,\n      \"creatorUserName\": \"System\",\n      \"creationTime\": \"2018-12-07T07:30:46.09\",\n      \"creatorUserId\": 2,\n      \"id\": 4300\n    }],\n    \"success\": true,\n    \"error\": null,\n    \"unAuthorizedRequest\": false\n  };\n  ;\n});\nMock.mock('/user/DeleteUser', 'post', function (options) {\n  console.log(JSON.parse(options.body));\n  var options = JSON.parse(options.body);\n  var index;\n\n  for (var i in userList.result.items) {\n    if (userList.result.items[i].id === id) {\n      //在数组arr里找到这个id\n      index = i;\n      break;\n    }\n  }\n\n  userList.result.items.splice(index, 1); //把这个id对应的对象从数组里删除\n\n  return {\n    \"result\": {},\n    \"success\": true,\n    \"error\": null,\n    \"unAuthorizedRequest\": false\n  };\n});\nexport default Mock;",{"version":3,"sources":["/Users/hq_failmy/Desktop/TFS/客户项目/J/君乐宝/君乐宝乳业学生奶追溯项目/源代码/高定报表/前端代码/src/views/UserModule/mock/user.js"],"names":["Mock","Random","produceNewsData","articles","i","newArticleObject","title","csentence","thumbnail_pic_s","dataImage","author_name","cname","date","time","push","userList","mock","options","console","log","JSON","parse","body","index","result","items","id","splice"],"mappings":"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","sourcesContent":["import Mock from 'mockjs'\r\nconst Random = Mock.Random;\r\nconst produceNewsData = function () {\r\n    let articles = [];\r\n    for (let i = 0; i < 100; i++) {\r\n        let newArticleObject = {\r\n            title: Random.csentence(5, 30), //  Random.csentence( min, max )\r\n            thumbnail_pic_s: Random.dataImage('300x250', 'mock的图片'), // Random.dataImage( size, text ) 生成一段随机的 Base64 图片编码\r\n            author_name: Random.cname(), // Random.cname() 随机生成一个常见的中文姓名\r\n            date: Random.date() + ' ' + Random.time() // Random.date()指示生成的日期字符串的格式,默认为yyyy-MM-dd；Random.time() 返回一个随机的时间字符串\r\n        }\r\n        articles.push(newArticleObject)\r\n    }\r\n    return {\r\n        articles: articles\r\n    }\r\n}\r\nvar userList ;\r\nMock.mock('/user/GetUserList', 'post', (options) => {\r\n    console.log(JSON.parse(options.body));\r\n    return { \"result\": { \"totalCount\": 4309, \"items\": [{ \"title\": \"什么东西啊\", \"text\": \"这是什么东西啊\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 1, \"creatorUserName\": \"Yunus Emre\", \"creationTime\": \"2018-12-11T04:56:06.233\", \"creatorUserId\": 3, \"id\": 4309 }, { \"title\": \"What is my name? Anyone can guess?\", \"text\": \"You need to find my name\", \"voteCount\": 0, \"answerCount\": 1, \"viewCount\": 6, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T15:58:39.837\", \"creatorUserId\": 2, \"id\": 4308 }, { \"title\": \"teste\", \"text\": \"teste\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 1, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T14:24:58.347\", \"creatorUserId\": 2, \"id\": 4307 }, { \"title\": \"gdfgsd\", \"text\": \"gsdfg\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 1, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T12:27:09.477\", \"creatorUserId\": 2, \"id\": 4306 }, { \"title\": \"teste\", \"text\": \"asdfasdfasd\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 0, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T05:23:08.103\", \"creatorUserId\": 2, \"id\": 4305 }, { \"title\": \"asc\", \"text\": \"sac\", \"voteCount\": 1, \"answerCount\": 2, \"viewCount\": 6, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T00:15:11.383\", \"creatorUserId\": 2, \"id\": 4304 }, { \"title\": \"test\", \"text\": \"tet\", \"voteCount\": 1, \"answerCount\": 3, \"viewCount\": 18, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-08T13:20:36.12\", \"creatorUserId\": 2, \"id\": 4303 }, { \"title\": \"hello\", \"text\": \"abc\", \"voteCount\": 0, \"answerCount\": 2, \"viewCount\": 9, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-08T09:49:56.233\", \"creatorUserId\": 2, \"id\": 4302 }, { \"title\": \"vcxv\", \"text\": \"vcxv\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 0, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-07T21:19:02.73\", \"creatorUserId\": 2, \"id\": 4301 }, { \"title\": \"dfsdfs\", \"text\": \"dfsfsfs\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 0, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-07T07:30:46.09\", \"creatorUserId\": 2, \"id\": 4300 }] }, \"success\": true, \"error\": null, \"unAuthorizedRequest\": false };;\r\n});\r\nvar userList ;\r\nMock.mock('/user/GetUserListSelect', 'post', (options) => {\r\n    console.log(JSON.parse(options.body));\r\n    return { \"result\": [{ \"title\": \"什么东西啊\", \"text\": \"这是什么东西啊\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 1, \"creatorUserName\": \"Yunus Emre\", \"creationTime\": \"2018-12-11T04:56:06.233\", \"creatorUserId\": 3, \"id\": 4309 }, { \"title\": \"What is my name? Anyone can guess?\", \"text\": \"You need to find my name\", \"voteCount\": 0, \"answerCount\": 1, \"viewCount\": 6, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T15:58:39.837\", \"creatorUserId\": 2, \"id\": 4308 }, { \"title\": \"teste\", \"text\": \"teste\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 1, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T14:24:58.347\", \"creatorUserId\": 2, \"id\": 4307 }, { \"title\": \"gdfgsd\", \"text\": \"gsdfg\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 1, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T12:27:09.477\", \"creatorUserId\": 2, \"id\": 4306 }, { \"title\": \"teste\", \"text\": \"asdfasdfasd\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 0, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T05:23:08.103\", \"creatorUserId\": 2, \"id\": 4305 }, { \"title\": \"asc\", \"text\": \"sac\", \"voteCount\": 1, \"answerCount\": 2, \"viewCount\": 6, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-10T00:15:11.383\", \"creatorUserId\": 2, \"id\": 4304 }, { \"title\": \"test\", \"text\": \"tet\", \"voteCount\": 1, \"answerCount\": 3, \"viewCount\": 18, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-08T13:20:36.12\", \"creatorUserId\": 2, \"id\": 4303 }, { \"title\": \"hello\", \"text\": \"abc\", \"voteCount\": 0, \"answerCount\": 2, \"viewCount\": 9, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-08T09:49:56.233\", \"creatorUserId\": 2, \"id\": 4302 }, { \"title\": \"vcxv\", \"text\": \"vcxv\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 0, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-07T21:19:02.73\", \"creatorUserId\": 2, \"id\": 4301 }, { \"title\": \"dfsdfs\", \"text\": \"dfsfsfs\", \"voteCount\": 0, \"answerCount\": 0, \"viewCount\": 0, \"creatorUserName\": \"System\", \"creationTime\": \"2018-12-07T07:30:46.09\", \"creatorUserId\": 2, \"id\": 4300 }], \"success\": true, \"error\": null, \"unAuthorizedRequest\": false };;\r\n});\r\n\r\n\r\nMock.mock('/user/DeleteUser', 'post', (options) => {\r\n    console.log(JSON.parse(options.body));\r\n    var options = JSON.parse(options.body);\r\n    var index;\r\n    for (var i in userList.result.items) {\r\n        if (userList.result.items[i].id === id) {//在数组arr里找到这个id\r\n            index = i\r\n            break;\r\n        }\r\n    }\r\n    userList.result.items.splice(index, 1)//把这个id对应的对象从数组里删除\r\n    return { \"result\": {}, \"success\": true, \"error\": null, \"unAuthorizedRequest\": false };\r\n});\r\nexport default Mock"]}]}